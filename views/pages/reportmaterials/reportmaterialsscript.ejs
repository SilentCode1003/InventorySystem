<script>
  $(document).ready(function () {
    let systemid = "";
    let status = "";

    const loader = `  
        <tr>
          <td><div class="custom-loader"></div></td>
          <td><div class="custom-loader"></div></td>
          <td><div class="custom-loader"></div></td>
          <td><div class="custom-loader"></div></td>
          <td><div class="custom-loader"></div></td>
          <td><div class="custom-loader"></div></td>
          <td><div class="custom-loader"></div></td>
          <td><div class="custom-loader"></div></td>
          <td><div class="custom-loader"></div></td>
          <td><div class="custom-loader"></div></td>
          <td><div class="custom-loader"></div></td>
        </tr>`;

    const tbody = $('#datatable tbody');
    for(let i = 0; i < 7; i++){
      tbody.append(loader);
    }

    LoadTable();

    $("#datatable tbody").on("click", "tr", function () {
      var dataRow = [];
      $(this)
        .closest("tr")
        .find("td")
        .each(function () {
          dataRow.push($(this).text());
        });
      console.log(dataRow);
      systemid = dataRow[0];
      status = dataRow[2];
    });

    $(document).on("click", "#editBtn", function () {
      $("#systemidmodal").val(systemid);
      $("#personelModal").modal("show");
      console.log(systemid);
    });

    var startDateInput = document.getElementById("startdate");
    var endDateInput = document.getElementById("enddate");

    startDateInput.addEventListener("change", function () {
      endDateInput.min = startDateInput.value;

      if (endDateInput.value < startDateInput.value) {
        endDateInput.value = startDateInput.value;
      }
    });

    $(document).on("click", "#searchBtn", function () {
      var startdate = $("#startdate").val();
      var enddate = $("#enddate").val();
      var message = "";

      if (startdate == "") {
        message += "Start Date ";
      }
      if (enddate == "") {
        message += "End Date";
      }

      if (message != "") {
        warning("Required", `Required to fillup ${message}`);
      } else {
        $("#report-dataTable").DataTable({
          destroy: true,
          processing: true,
          serverSide: true,
          paging: false,
          searching: false,
          info: false,
          scrollCollapse: true,
          serverMethod: "POST",
          ajax: {
            url: "/reportmaterials/search",
            data: {
              startdate: startdate,
              enddate: enddate,
            },
            dataSrc: (json) => {
              var finalData = [];
              var data = json.data;

              console.log(data);
              $.each(data, (key, item) => {
                finalData.push({
                  detailid: item.detailid,
                  requestby: item.requestby,
                  requestdate: item.requestdate,
                  brand: item.brand,
                  description: item.description,
                  quantity: item.quantity,
                  approvedby: item.approvedby,
                  approveddate: item.approveddate,
                  drnumber: item.drnumber,
                  used: item.used,
                  returned: item.returned,
                });
              });

              return finalData;
            },
          },
          columnDefs: [
            {
              targets: 1,
              className: "td-indent",
            },
          ],
          columns: [
            { data: "detailid" },
            { data: "requestby" },
            { data: "requestdate" },
            { data: "brand" },
            { data: "description" },
            { data: "quantity" },
            { data: "approvedby" },
            { data: "approveddate" },
            { data: "drnumber" },
            { data: "used" },
            { data: "returned" },
          ],
          initComplete: function () {},
        });
      }
    });

    $(document).on("click", "#exportBtn", function () {
      console.log("clicked!");
      var content = $("#report-dataTable tr");
      var headerArr = [];
      var dataArr = [];
      var filename = `Report`;

      console.log(content.length);
      var index = 1;
      for (x = 0; x < content.length; x++) {
        // console.log(header[x].innerText);
        console.log(content[x].innerText);
        var innerData = content[x].innerText;
        innerData = innerData.split("\t");

        dataArr.push([innerData]);
      }

      // console.log(dataArr);

      $.ajax({
        type: "POST",
        url: "/reportmaterials/excel",
        data: {
          data: JSON.stringify(dataArr),
          filename: filename,
        },
        success: function (result) {
          window.open("/reportmaterials/generate-excel", "_blank");
        },
        error: function (error) {
          error(error);
        },
      });
    });

   //Search Table Functionality
   $("#search").on("input", function () {
      filterTableRows("#datatable", 11, "#search");
    });

    function LoadTable() {
      $(".progress").hide();
      $(".progress").slideDown();

      $.ajax({
        url: '/reportmaterials/load',
        method: 'GET',
        dataType: 'json',
        xhrFields: {
          onprogress: function (e) {
            if (e.lengthComputable) {
              var percentComplete = (e.loaded / e.total) * 100;
              $(".progress-bar").css("width", percentComplete + "%");
            }
          }
        },
        success: function (data) {
          setTimeout(function () {
            $(".progress").slideUp(function () {
              if (data.msg === 'success') {
                populatedatatable(data.data);
              } else {
                console.error(data.msg);
              }
            });
          }, 1000);
        },
        error: function (error) {
          console.error(error);
        }
      });
    }

    function populatedatatable(data) {
      console.log(data);
      const tableBody = $('#datatable tbody');
      tableBody.empty();

      if (data.length === 0) {
        const tr = $('<tr>').append($('<td>', {
          colspan: 6,
          class: 'text-center',
          text: 'No Data Matched'
        }));
        tableBody.append(tr);
      } else {
        data.forEach(item => {
          let action = '';
          if (item.status === 'ACTIVE') {
            action = `
                  <span class="editbutton" id="editBtn" name="editBtn" data-toggle="modal" data-target="#editModal"><i class="fas fa-edit" style="color: rgb(99, 115, 129);"></i></span>
                  <span class="editbutton" id="inactiveBtn"><i class="fas fa-eye-slash" style="color: rgb(99, 115, 129);"></i></span>`;
          } else if (item.status === 'INACTIVE') {
            action = `
                <span class="editbutton" id="editBtn" name="editBtn" data-toggle="modal" data-target="#editModal"><i class="fas fa-edit" style="color: rgb(99, 115, 129);"></i></span>
                <span class="editbutton" id="activeBtn"><i class="fas fa-eye" style="color: rgb(99, 115, 129);"></i></span>`;
          }
          const statusBackground = item.status === 'ACTIVE' ? 'status-success' : 'status-warning';
          const containerBackground = item.status === 'ACTIVE' ? 'status-container-sc' : 'status-container-wr';

          /*
            detailid: item.detailid,
            requestby: item.requestby,
            requestdate: item.requestdate,
            brand: item.brand,
            description: item.description,
            quantity: item.quantity,
            approvedby: item.approvedby,
            approveddate: item.approveddate,
            drnumber: item.drnumber,
            used: item.used,
            returned: item.returned,
            reportmaterials
          */

          const tr = $('<tr>').append(
            $('<td>', { text: item.detailid, 'data-label': 'ID', class: 'custom-mobile-align' }),
            $('<td>', { text: item.requestby, 'data-label': 'Access', class: 'custom-mobile-align' }),
            $('<td>', { text: item.requestdate, 'data-label': 'Created By', class: 'custom-mobile-align' }),
            $('<td>', { text: item.brand, 'data-label': 'Created Date', class: 'custom-mobile-align' }),
            $('<td>', { text: item.description, 'data-label': 'Created Date', class: 'custom-mobile-align' }),
            $('<td>', { text: item.quantity, 'data-label': 'ID', class: 'custom-mobile-align' }),
            $('<td>', { text: item.approvedby, 'data-label': 'Access', class: 'custom-mobile-align' }),
            $('<td>', { text: item.approveddate, 'data-label': 'Created By', class: 'custom-mobile-align' }),
            $('<td>', { text: item.drnumber, 'data-label': 'Created Date', class: 'custom-mobile-align' }),
            $('<td>', { text: item.used, 'data-label': 'ID', class: 'custom-mobile-align' }),
            $('<td>', { text: item.returned, 'data-label': 'ID', class: 'custom-mobile-align' }),
          );

          tableBody.append(tr);
        });
      }
    }

    $(document).on("click", "#uploadBtn", function () {
      //   console.log("clicked!");
      showspinner();
      UploadProcess();
    });

    function UploadProcess() {
      //Reference the FileUpload element.
      var fileUpload = document.getElementById("excelfile");

      //Validate whether File is valid Excel file.
      var regex = /^([a-zA-Z0-9\s_\\.\-:])+(.xls|.xlsx|.csv|.ods)$/;
      if (regex.test(fileUpload.value.toLowerCase())) {
        if (typeof FileReader != "undefined") {
          var reader = new FileReader();

          //For Browsers other than IE.
          if (reader.readAsBinaryString) {
            reader.onload = function (e) {
              GetTableFromExcel(e.target.result);
            };
            reader.readAsBinaryString(fileUpload.files[0]);
          } else {
            //For IE Browser.
            reader.onload = function (e) {
              var data = "";
              var bytes = new Uint8Array(e.target.result);
              for (var i = 0; i < bytes.byteLength; i++) {
                data += String.fromCharCode(bytes[i]);
              }
              GetTableFromExcel(data);
            };
            reader.readAsArrayBuffer(fileUpload.files[0]);
          }
        } else {
          warning("Upload", "This browser does not support HTML5.");
        }
      } else {
        warning("Upload", "Please upload a valid Excel file.");
      }
    }

    function GetTableFromExcel(data) {
      //Read the Excel File data in binary
      var workbook = XLSX.read(data, {
        type: "binary",
      });

      //get the name of First Sheet.
      var Sheet = workbook.SheetNames[0];

      //Read all rows from First Sheet into an JSON array.
      var excelRows = XLSX.utils.sheet_to_row_object_array(
        workbook.Sheets[Sheet]
      );
      var columns = Object.keys(excelRows[0]);

      //Create a HTML Table element.
      var myTable = document.createElement("table");
      myTable.border = "1";

      //Add the header row.
      var row = myTable.insertRow(-1);

      var dataExcelArr = [];
      //Add the data rows from Excel file.
      for (var i = 0; i < excelRows.length; i++) {
        //Add the data row.
        var data = [];
        var row = myTable.insertRow(-1);
        for (var j = 0; j < columns.length; j++) {
          var cell = row.insertCell(-1);
          cell.innerHTML = excelRows[i][columns[j]];
          data.push({
            item: excelRows[i][columns[j]],
          });
        }
        dataExcelArr.push({
          personel: `${data[0].item} ${data[1].item}`,
        });
      }
      excelDataSave(dataExcelArr);
    }

    function excelDataSave(data) {
      var dataraw = JSON.stringify(data, null, 2);
      $.ajax({
        type: "POST",
        url: "/cablingpersonel/excelsave",
        data: {
          data: dataraw,
        },
        success: function (result) {
          LoadTable();
          if (result.msg != "success") {
            warning(
              "Duplicate",
              `Some data already exist on the database. ID[${result.data}]`
            );
          } else {
            success("Saved!", "Data saved!");
          }

          // $('#item-tbl').DataTable().ajax.reload();
        },
        error: function (result) {
          error(result.data);
        },
      });
      hidespinner();
    }
  });
</script>
