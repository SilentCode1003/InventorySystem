<script>
    $(document).ready(function () {
        let id = "";
        let status = "";
        let serialtag = "";

        const loader = `  
          <tr>
            <td><div class="custom-loader"></div></td>
            <td><div class="custom-loader"></div></td>
            <td><div class="custom-loader"></div></td>
            <td><div class="custom-loader"></div></td>
            <td><div class="custom-loader"></div></td>
            <td><div class="custom-loader"></div></td>
            <td><div class="custom-loader"></div></td>
          </tr>`;

        const tbody = $('#datatable tbody');
        for (let i = 0; i < 7; i++) {
            tbody.append(loader);
        }

        LoadTable();
        LoadList();
        LoadlistModal();


        $("#datatable tbody").on("click", "tr", function () {
            var dataRow = [];
            $(this)
                .closest("tr")
                .find("td")
                .each(function () {
                    dataRow.push($(this).text());
                });
            console.log(dataRow);
            id = dataRow[0];
            status = dataRow[5];
            serialtag = dataRow[2];
        });

        $(document).on("click", "#editBtn", function () {
            $("#idmodal").val(id);
            $("#serialtagmodal").val(serialtag);
            $("#editModal").modal("show");
            console.log(id);
        });

        $(document).on("input", "#tool", function () {
            $("#toolID").val("");
        });

        $(document).on("click", "#addBtn", function () {
            let tool = $("#toolID").val();
            let serialtag = $("#serialtag").val();
            console.log(tool, serialtag);
            var message = "";

            if (tool == "") {
                message += "Tool, ";
            }
            if (serialtag == "") {
                message += "Serial";
            }

            if (message != "") {
                warning("Required", `Please fill up ${message}`);
            }
            else {
                $.ajax({
                    type: "POST",
                    url: "/cablinginventorytool/save",
                    data: {
                        toolid: tool,
                        serialtag: serialtag
                    },
                    success: function (result) {
                        if (result.msg == "success") {
                            LoadTable();
                            $("#toolID").val('');
                            $("#tool").val('');
                            $("#serialtag").val('');
                            success("Saved", "Successfully");
                        }

                        if (result.msg == "exist") {
                            warning("Exist", `${serialtag} Serial Already Exist!`);
                        }
                    },
                    error: function (err) {
                        errormsg(err);
                    },
                });
            }
        });

        $(document).on("input", "#toolmodal", function () {
            $("#toolIDmodal").val("");
        });

        //Edit Update
        $(document).on("click", "#saveBtn", function () {
            console.log("Update")
            let toolid = $("#toolIDmodal").val();
            let serialtag = $("#serialtagmodal").val();

            var message = "";

            if (toolid === "" && serialtag === "") {
                message += "Fill atleast one field";
            }
            console.log(toolid, serialtag)
            if (message != "") {
                warning("Required", `${message}`);
            } 
            else {
                $.ajax({
                    type: "PUT",
                    url: "/cablinginventorytool/edit",
                    data: {
                        toolid: toolid,
                        serialtag: serialtag,
                        id: id,
                    },
                    success: function (result) {
                        if (result.msg == "success") {
                            LoadTable();
                            $("#serialtagmodal").val("");
                            $("#toolIDmodal").val("");
                            $("#toolmodal").val("");
                            $("#editModal").modal("hide");
                            success("Saved", "Successfully");
                        }

                        if (result.msg == "exist") {
                            warning("Exist", `${descriptionmodal} already exist!`);
                        }
                    },
                    error: function (err) {
                        errormsg(err);
                    },
                });
            }
        });

        //Status Update
        $(document).on("click", "#activeBtn", function () {
            // console.log(id);
            // console.log(status);
            $.ajax({
                type: "PUT",
                url: "/cablinginventorytool/status",
                data: {
                    status: status,
                    id: id,
                },
                success: function (result) {
                    if (result.msg == "success") {
                        LoadTable();
                        success("Saved", "Successfully");
                    }

                    if (result.msg == "notexist") {
                        warning(`${id} does not exist!`);
                    }
                },
                error: function (err) {
                    errormsg(err);
                },
            });
        });

        $(document).on("click", "#inactiveBtn", function () {
            console.log(id);
            console.log(status);
            $.ajax({
                type: "PUT",
                url: "/cablinginventorytool/status",
                data: {
                    status: status,
                    id: id,
                },
                success: function (result) {
                    if (result.msg == "success") {
                        LoadTable();
                        success("Saved", "Successfully");
                    }

                    if (result.msg == "notexist") {
                        warning(`${id} does not exist!`);
                    }
                },
                error: function (err) {
                    errormsg(err);
                },
            });
        });

        //Search Table Functionality
        $("#search").on("input", function () {
            filterTableRows("#datatable", 6, "#search");
        });

        function LoadTable() {
            $(".progress").hide();
            $(".progress").slideDown();

            $.ajax({
                url: '/cablinginventorytool/load',
                method: 'GET',
                dataType: 'json',
                xhrFields: {
                    onprogress: function (e) {
                        if (e.lengthComputable) {
                            var percentComplete = (e.loaded / e.total) * 100;
                            $(".progress-bar").css("width", percentComplete + "%");
                        }
                    }
                },
                success: function (data) {
                    setTimeout(function () {
                        $(".progress").slideUp(function () {
                            if (data.msg === 'success') {
                                populatedatatable(data.data);
                            } else {
                                console.error(data.msg);
                            }
                        });
                    }, 1000);
                },
                error: function (error) {
                    console.error(error);
                }
            });
        }

        function populatedatatable(data) {
            console.log(data);
            const tableBody = $('#datatable tbody');
            tableBody.empty();

            if (data.length === 0) {
                const tr = $('<tr>').append($('<td>', {
                    colspan: 7,
                    class: 'text-center',
                    text: 'No Data Matched'
                }));
                tableBody.append(tr);
            } else {
                data.forEach(item => {
                    let action = '';
                    if (item.status === 'ACTIVE') {
                        action = `
                    <span class="editbutton" id="editBtn" name="editBtn" data-toggle="modal" data-target="#editModal"><i class="fas fa-edit" style="color: rgb(99, 115, 129);"></i></span>
                    <span class="editbutton" id="inactiveBtn"><i class="fas fa-eye-slash" style="color: rgb(99, 115, 129);"></i></span>`;
                    } else if (item.status === 'INACTIVE') {
                        action = `
                  <span class="editbutton" id="editBtn" name="editBtn" data-toggle="modal" data-target="#editModal"><i class="fas fa-edit" style="color: rgb(99, 115, 129);"></i></span>
                  <span class="editbutton" id="activeBtn"><i class="fas fa-eye" style="color: rgb(99, 115, 129);"></i></span>`;
                    }
                    const statusBackground = item.status === 'ACTIVE' ? 'status-success' : 'status-warning';
                    const containerBackground = item.status === 'ACTIVE' ? 'status-container-sc' : 'status-container-wr';

                    const tr = $('<tr>').append(
                        $('<td>', { text: item.id, 'data-label': 'ID', class: 'custom-mobile-align' }),
                        $('<td>', { text: item.toolid, 'data-label': 'Name', class: 'custom-mobile-align' }),
                        $('<td>', { text: item.serialtag, 'data-label': 'Serial Tag', class: 'custom-mobile-align' }),
                        $('<td>', { text: item.createdby, 'data-label': 'Created By', class: 'custom-mobile-align' }),
                        $('<td>', { text: item.createddate, 'data-label': 'Created Date', class: 'custom-mobile-align' }),
                        $('<td>', { class: 'custom-mobile-align', 'data-label': 'Status' }).append(
                            $('<div>', { class: containerBackground }).append(
                                $('<span>', { text: item.status, class: statusBackground })
                            )
                        ),
                        $('<td>', { html: action, 'data-label': 'Action', class: 'actionWidth' })
                    );

                    tableBody.append(tr);
                });
            }
        }

        function LoadList() {
            // console.log("triggered");
            $.ajax({
                type: "GET",
                url: "/cablinginventorytool/getlist",
                success: function (result) {
                    let activeData = [];
                    let dropdownID = "toolDropdown";
                    let inputID = "tool";
                    let hiddenID = "toolID";
                    let container = result.data;
                    console.log(container)
                    $.each(container, (key, item) => {
                        if (item.status === "ACTIVE") {
                            let name = item.description;
                            let id = item.id;
                            activeData.push({
                                display: name,
                                value: id,
                            });
                        }
                    });
                    AddDropdownData(dropdownID, activeData, inputID, hiddenID)
                },
                error: function (err) {
                    errormsg(err);
                },
            });
        }

        function LoadlistModal() {
            // console.log("triggered");
            $.ajax({
                type: "GET",
                url: "/cablinginventorytool/getlist",
                success: function (result) {
                    let activeData = [];
                    let dropdownID = "toolDropdownmodal";
                    let inputID = "toolmodal";
                    let hiddenID = "toolIDmodal";
                    let container = result.data;
                    // console.log(container)
                    $.each(container, (key, item) => {
                        if (item.status === "ACTIVE") {
                            let name = item.description;
                            let id = item.id;
                            activeData.push({
                                display: name,
                                value: id,
                            });
                        }
                    });
                    AddDropdownData(dropdownID, activeData, inputID, hiddenID)
                },
                error: function (err) {
                    errormsg(err);
                },
            });
        }

    });
</script>