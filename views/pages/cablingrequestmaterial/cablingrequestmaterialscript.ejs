<script>
  $(document).ready(function () {
    let itemcode = "";
    let status = "";

    const loader = `  
        <tr>
          <td><div class="custom-loader"></div></td>
          <td><div class="custom-loader"></div></td>
          <td><div class="custom-loader"></div></td>
          <td><div class="custom-loader"></div></td>
          <td><div class="custom-loader"></div></td>
          <td><div class="custom-loader"></div></td>
          <td><div class="custom-loader"></div></td>
          <td><div class="custom-loader"></div></td>
          <td><div class="custom-loader"></div></td>
        </tr>`;

    const tbody = $('#datatable tbody');
    for(let i = 0; i < 7; i++){
      tbody.append(loader);
    }

    LoadTable();
    LoadList();

    $("#dtbox").DateTimePicker({
      dateFormat: "yyyy-MM-dd",
    });

    $("#datatable tbody").on("click", "tr", function () {
      var dataRow = [];
      $(this)
        .closest("tr")
        .find("td")
        .each(function () {
          dataRow.push($(this).text());
        });
      // console.log(dataRow);
      itemcode = dataRow[0];
      status = dataRow[7];
    });

    let row_index = "";
    let current_count = 0;
    let current_brand = "";
    let current_description = "";
    let current_row_index = "";
    let current_row = "";
    $("#cablingrequestbody-datatable").on("click", "tr", function () {
      var dataRow = [];
      row_index = this;
      current_row_index = $(this).index();
      current_row = $(this).closest("tr");
      $(this)
        .closest("tr")
        .find("td")
        .each(function () {
          dataRow.push($(this).text());
        });
      // console.log(dataRow);

      current_brand = dataRow[0];
      current_description = dataRow[1];
      current_count = parseFloat(dataRow[2]);
    });

    $(document).on("click", "#submitBtn", function () {
      if ($('#material-list-table tbody tr').not('.table-list-no-data').length === 0) {
          warning('Required', 'Request List Table Cannot be Empty');
      }else{
        $("#personel").empty();
        $("#requestdate").empty();
        $("#store").empty();
        $("#type").empty();
        $("#cablingrequestsubmitModal").modal("show");
        LoadModalList();
      }
    });

    $(document).on("click", "#addBtn", function () {
      let quantity = $("#quantity").val();
      let description = $("#itemname").val();
      var data = $("#material-list-table tr");

      var message = "";

      if (quantity == "") {
        message += "QUANTITY ";
      }

      if (description == "") {
        message += "DESCRIPTION ";
      }

      if (message != "") {
        warning("Required", `Please fill up ${message}`);
      } else {
        for (x = 0; x < data.length; x++) {
          // console.log(header[x].innerText);
          console.log(data[x].innerText);
          var innerData = data[x].innerText;
          innerData = innerData.split("\t");

          if (innerData[1] == description) {
            return warning(
              "Already Exist",
              `Already request "${description}" with item count of ${innerData[0]}`
            );
          }
        }

        $.ajax({
          type: "POST",
          url: "/cablingrequestmaterial/add",
          data: {
            description: description,
            quantity: quantity,
          },
          success: function (result) {
            var data = result.data;

            console.log(result.msg);

            if (result.msg == "success") {
              var data = result.data;

              $.each(data, (key, item) => {
                console.log(result);

                const tbody = document.getElementById(
                  "cablingrequestbody-datatable"
                );
                const row = document.createElement("tr");
                const BRAND = document.createElement("td");
                const DESCRIPTION = document.createElement("td");
                const COUNT = document.createElement("td");
                const UNIT = document.createElement("td");
                const ACTION = document.createElement("td");

                const action = `<button id="decreaseBtn" class="custom-btn cw-5rem clr-warning" name="decreaseBtn" data-toggle="modal" data-target="#cablingrequestmaterialModal"><i class="fas fa-fw fa-minus"></i></button> 
                      <button id="increaseBtn" class="custom-btn cw-5rem clr-success " name="increaseBtn"><i class="fas fa-fw fa-plus"></i></button>`;

                BRAND.innerHTML = item.brand;
                row.appendChild(BRAND);

                DESCRIPTION.innerHTML = description;
                row.appendChild(DESCRIPTION);

                COUNT.innerHTML = quantity;
                row.appendChild(COUNT);

                UNIT.innerHTML = item.unit;
                row.appendChild(UNIT);

                ACTION.innerHTML = action;
                row.appendChild(ACTION);

                tbody.appendChild(row);
              });

              // LoadTable();
              // success("Saved", "Successfully");
            }

            if (result.msg == "exist") {
              warning("Exist", `${itemdescription} has already registered!`);
            }

            if (result.msg == "insufficient") {
              warning(
                "Insufficient",
                `${description} has ${data[0].count} ${data[0].unit}`
              );
            }
          },
          error: function (err) {
            errormsg(err);
          },
        });
      }
    });

    //Edit Update
    $(document).on("click", "#saveBtn", function () {
      let itemdescriptionmodal = $("#itemdescriptionmodal").val();
      let brandlistmodal = $("#brandlistmodal").val();

      var message = "";

      if (itemdescriptionmodal == "") {
        message += "ITEM DESCRIPTION ";
      }

      if (brandlistmodal == "") {
        message += "BRAND NAME ";
      }

      if (message != "") {
        warning("Required", `Please fill up ${message}`);
      } else {
        $.ajax({
          type: "POST",
          url: "/cablingrequestmaterial/edit",
          data: {
            itemdescriptionmodal: itemdescriptionmodal,
            brandlistmodal: brandlistmodal,
            itemcode: itemcode,
          },
          success: function (result) {
            if (result.msg == "success") {
              LoadTable();
              success("Saved", "Successfully");
            }

            if (result.msg == "exist") {
              warning("Exist", `${itemdescriptionmodal} already exist!`);
            }
          },
          error: function (err) {
            errormsg(err);
          },
        });
      }
    });

    //Status Update
    $(document).on("click", "#activeBtn", function () {
      console.log(itemcode);
      console.log(status);
      $.ajax({
        type: "POST",
        url: "/cablingrequestmaterial/status",
        data: {
          status: status,
          itemcode: itemcode,
        },
        success: function (result) {
          if (result.msg == "success") {
            LoadTable();
            success("Saved", "Successfully");
          }

          if (result.msg == "notexist") {
            warning(`${itemcode} does not exist!`);
          }
        },
        error: function (err) {
          errormsg(err);
        },
      });
    });

    $(document).on("click", "#inactiveBtn", function () {
      console.log(itemcode);
      console.log(status);
      $.ajax({
        type: "POST",
        url: "/cablingrequestmaterial/status",
        data: {
          status: status,
          itemcode: itemcode,
        },
        success: function (result) {
          if (result.msg == "success") {
            LoadTable();
            success("Saved", "Successfully");
          }

          if (result.msg == "notexist") {
            warning(`${itemcode} does not exist!`);
          }
        },
        error: function (err) {
          errormsg(err);
        },
      });
    });

    //Request List increase and decreace count
    $(document).on("click", "#decreaseBtn", function (e) {
      if (current_count == 1 || current_count < 1) {
        current_row.remove();
      } else {
        current_count -= 1;
        $(
          `#cablingrequestbody-datatable tr:eq(${current_row_index}) td:eq(2)`
        ).text(`${current_count}`);
      }
    });

    $(document).on("click", "#increaseBtn", function (e) {
      current_count += 1;
      $(
        `#cablingrequestbody-datatable tr:eq(${current_row_index}) td:eq(2)`
      ).text(`${current_count}`);
    });

    $(document).on("click", "#requestBtn", function () {
      var requestby = $("#personel").val();
      var requestdate = $("#requestdate").val();
      var store = $("#store").val();
      var type = $("#type").val();
      var request_table = $("#material-list-table tr");
      var data_length = request_table.length;
      var details = [];
      var message = "";

      console.log(data_length);

      if (data_length != 1) {
        if (requestby == "") {
          message += "Request By ";
        }

        if (requestdate == "") {
          message += "Request Date ";
        }

        if (store == "") {
          message += "Store ";
        }

        if (type == "") {
          message += "Type ";
        }

        if (message != "") {
          warning("Empty", `Required field/s ${message}`);
        } else {
          for (x = 1; x < data_length; x++) {
            var innerData = request_table[x].innerText;
            innerData = innerData.split("\t");

            details.push({
              brand: innerData[0],
              description: innerData[1],
              count: innerData[2],
              unit: innerData[3],
            });
          }

          console.log(details);

          var detail = JSON.stringify(details);

          $.ajax({
            type: "POST",
            url: "/cablingrequestmaterial/save",
            data: {
              requestby: requestby,
              requestdate: requestdate,
              store: store,
              type: type,
              details: detail,
            },
            success: function (result) {
              if (result.msg == "success") {
                ClearTable("material-list-table");
                $("#cablingrequestsubmitModal").modal("hide");
                LoadTable();
                success("Success", "Request Success!");
              }
              if (result.msg == "duplicate") {
                warning(
                  "Duplicate",
                  "Duplicate detail request, if you want to add click EDIT button to edit request."
                );
              }
            },
            error: function (error) {
              errormsg(error);
            },
          });
        }
      } else {
        warning("Empty", "No Request");
      }
    });

    //Search Table Functionality
    $("#search").on("input", function () {
      filterTableRows("#datatable", 8, "#search");
    });

    function LoadTable() {
      $(".progress").hide();
      $(".progress").slideDown();

      $.ajax({
        url: '/cablingrequestmaterial/load',
        method: 'GET',
        dataType: 'json',
        xhrFields: {
          onprogress: function (e) {
            if (e.lengthComputable) {
              var percentComplete = (e.loaded / e.total) * 100;
              $(".progress-bar").css("width", percentComplete + "%");
            }
          }
        },
        success: function (data) {
          setTimeout(function () {
            $(".progress").slideUp(function () {
              if (data.msg === 'success') {
                populatedatatable(data.data);
              } else {
                console.error(data.msg);
              }
            });
          }, 1000);
        },
        error: function (error) {
          console.error(error);
        }
      });
    }

    function populatedatatable(data) {
      console.log(data);
      const tableBody = $('#datatable tbody');
      tableBody.empty();

      if (data.length === 0) {
        const tr = $('<tr>').append($('<td>', {
          colspan: 6,
          class: 'text-center',
          text: 'No Data Matched'
        }));
        tableBody.append(tr);
      } else {
        data.forEach(item => {
          let action = '';
          if (item.status === 'ACTIVE') {
            action = `
                  <span class="editbutton" id="editBtn" name="editBtn" data-toggle="modal" data-target="#editModal"><i class="fas fa-edit" style="color: rgb(99, 115, 129);"></i></span>
                  <span class="editbutton" id="inactiveBtn"><i class="fas fa-eye-slash" style="color: rgb(99, 115, 129);"></i></span>`;
          } else if (item.status === 'INACTIVE') {
            action = `
                <span class="editbutton" id="editBtn" name="editBtn" data-toggle="modal" data-target="#editModal"><i class="fas fa-edit" style="color: rgb(99, 115, 129);"></i></span>
                <span class="editbutton" id="activeBtn"><i class="fas fa-eye" style="color: rgb(99, 115, 129);"></i></span>`;
          }
          const statusBackground = item.status === 'APPROVED' ? 'status-success' : 'status-warning';
          const containerBackground = item.status === 'APPROVED' ? 'status-container-sc' : 'status-container-wr';

          const tr = $('<tr>').append(
            $('<td>', { text: item.detailid, 'data-label': 'ID', class: 'custom-mobile-align' }),
            $('<td>', { text: item.requestby, 'data-label': 'Request By', class: 'custom-mobile-align' }),
            $('<td>', { text: item.requestdate, 'data-label': 'Request Date', class: 'custom-mobile-align' }),
            $('<td>', { html: item.detail, 'data-label': 'Detail', class: 'custom-mobile-align no-wrap' }),
            $('<td>', { text: item.remarks, 'data-label': 'Remarks', class: 'custom-mobile-align' }),
            $('<td>', { text: item.approvedby, 'data-label': 'Approved By', class: 'custom-mobile-align' }),
            $('<td>', { text: item.approvedate, 'data-label': 'Approved Date', class: 'custom-mobile-align' }),
            $('<td>', { class: 'custom-mobile-align', 'data-label': 'Status' }).append(
              $('<div>', { class: containerBackground }).append(
                $('<span>', { text: item.status, class: statusBackground })
              )
            ),
            $('<td>', { html: action, 'data-label': 'Action', class: 'actionWidth' })
          );

          tableBody.append(tr);
        });
      }
    }

    function LoadList() {
      $.ajax({
        type: "GET",
        url: "/cablingitems/load",
        success: function (result) {
          var data = result.data;
          let activeItems = [];

          $.each(data, function (key, item) {
            if (item.status == "ACTIVE") {
              activeItems.push(item.description);
            }
          });

          populateDropdown(activeItems, "itemDropdown", "itemname");
        },
        error: function (err) {
          errormsg(err);
        },
      });
    }

    function LoadModalList() {
      $.ajax({
        type: "GET",
        url: "/cablingpersonel/load",
        success: function (result) {
          var data = result.data;
          let activePersonel = [];

          $.each(data, function (key, item) {
            if (item.status == "ACTIVE") {
              activePersonel.push(item.personel);
            }
          });

          populateDropdown(activePersonel, "personelDropdown", "personel");
        },
        error: function (err) {
          errormsg(err);
        },
      });

      $.ajax({
        type: "GET",
        url: "/store/load",
        success: function (result) {
          var data = result.data;
          let storeActive = [];
          $.each(data, function (key, item) {
            if (item.status == "ACTIVE") {
              storeActive.push(item.storename);
            }
          });
          populateDropdown(storeActive, "storeDropdown", "store");
        },
        error: function (err) {
          errormsg(err);
        },
      });

      $.ajax({
        type: "GET",
        url: "/cablingrequesttype/load",
        success: function (result) {
          var data = result.data;
          let activeType = [];

          $.each(data, function (key, item) {
            if (item.status == "ACTIVE") {
              activeType.push(item.typename);
            }
          });
          // console.log("to be pushed in type: ",activeType);
          populateDropdown(activeType, "typeDropdown", "type");
        },
        error: function (err) {
          errormsg(err);
        },
      });

      setupCustomDropdown("personel", "personelDropdown", "dropdown-option");
      setupCustomDropdown("store", "storeDropdown", "dropdown-option");
      setupCustomDropdown("type", "typeDropdown", "dropdown-option");
    }

    setupCustomDropdown("itemname", "itemDropdown", "dropdown-option");
  });
</script>
