<script>
  $(document).ready(function () {
    let itemserial = "";
    let description = "";
    let status = "";
    var activeDescription = [];
    var activePersonel = [];

    const loader = `  
        <tr>
          <td><div class="custom-loader"></div></td>
          <td><div class="custom-loader"></div></td>
          <td><div class="custom-loader"></div></td>
          <td><div class="custom-loader"></div></td>
          <td><div class="custom-loader"></div></td>
          <td><div class="custom-loader"></div></td>
        </tr>`;

    const tbody = $('#datatable tbody');
    for(let i = 0; i < 7; i++){
      tbody.append(loader);
    }

    LoadTable();
    LoadList();
    //   LoadModalList();

    $("#dtbox").DateTimePicker({
      dateFormat: "yyyy-MM-dd",
    });

    $("#datatable tbody").on("click", "tr", function () {
      var dataRow = [];
      $(this)
        .closest("tr")
        .find("td")
        .each(function () {
          dataRow.push($(this).text());
        });
      // console.log(dataRow);
      itemserial = dataRow[0];
      description = dataRow[1];
      status = dataRow[4];
    });

    let row_index = "";
    let current_count = 0;
    let current_brand = "";
    let current_description = "";
    let current_row_index = "";
    let current_row = "";
    $("#cablingproducts-dataTable tbody").on("click", "tr", function () {
      var dataRow = [];
      row_index = this;
      current_row_index = $(this).index();
      current_row = $(this).closest("tr");
      $(this)
        .closest("tr")
        .find("td")
        .each(function () {
          dataRow.push($(this).text());
        });
      console.log(dataRow);

      current_brand = dataRow[0];
      current_description = dataRow[1];
      current_count = parseFloat(dataRow[2]);
    });

    $(document).on("click", "#submitBtn", function () {
      $("#cablingrequestsubmitModal").modal("show");
    });

    $(document).on("click", "#addBtn", function () {
      let description = $("#description").val();
      let serial = $("#itemserial").val();
      var message = "";

      if (description == "") {
        message += "DESCRIPTION ";
      }

      if (serial == "") {
        message += "SERIAL ";
      }

      if (message != "") {
        warning("Required", `Please fill up ${message}`);
      } else {
        $.ajax({
          type: "POST",
          url: "/cablingproduct/save",
          data: {
            description: description,
            serial: serial,
          },
          success: function (result) {
            if (result.msg == "success") {
              LoadTable();
              success("Saved", "Successfully");
            }

            if (result.msg == "exist") {
              warning(
                "Exist",
                `${description}[${serial}] has already registered!`
              );
            }
          },
          error: function (err) {
            errormsg(err);
          },
        });
      }
    });

    //Edit Update
    $(document).on("click", "#editBtn", function () {
      $("#itemserialmodal").val(itemserial);
      $("#descriptionlist").val(description);
      $("#cablingitemsModal").modal("show");
      console.log(description);
    });

    $(document).on("click", "#saveBtn", function () {
      let itemserialmodal = $("#itemserialmodal").val();
      let descriptionmodal = $("#descriptionlist").val();

      var message = "";

      if (itemserialmodal == "") {
        message += "SERIAL ";
      }

      if (descriptionmodal == "") {
        message += "DESCRIPTION ";
      }

      if (message != "") {
        warning("Required", `Please fill up ${message}`);
      } else {
        $.ajax({
          type: "POST",
          url: "/cablingproduct/edit",
          data: {
            itemserial: itemserial,
            description: descriptionmodal,
          },
          success: function (result) {
            if (result.msg == "success") {
              LoadTable();
              $("#cablingitemsModal").modal("hide");
              success("Saved", "Successfully");
            }

            if (result.msg == "exist") {
              warning("Exist", `${itemdescriptionmodal} already exist!`);
            }
          },
          error: function (err) {
            errormsg(err);
          },
        });
      }
    });

    //Status Update
    $(document).on("click", "#activeBtn", function () {
      console.log(itemserial);
      console.log(status);
      $.ajax({
        type: "POST",
        url: "/cablingpersonel/status",
        data: {
          status: status,
          itemserial: itemserial,
        },
        success: function (result) {
          if (result.msg == "success") {
            LoadTable();
            success("Saved", "Successfully");
          }

          if (result.msg == "notexist") {
            warning(`${itemserial} does not exist!`);
          }
        },
        error: function (err) {
          errormsg(err);
        },
      });
    });

    $(document).on("click", "#inactiveBtn", function () {
      console.log(itemserial);
      console.log(status);
      $.ajax({
        type: "POST",
        url: "/cablingpersonel/status",
        data: {
          status: status,
          itemserial: itemserial,
        },
        success: function (result) {
          if (result.msg == "success") {
            LoadTable();
            success("Saved", "Successfully");
          }

          if (result.msg == "notexist") {
            warning(`${itemserial} does not exist!`);
          }
        },
        error: function (err) {
          errormsg(err);
        },
      });
    });

    $("#search").on("keyup", function () {
      var input, filter, table, tr, td, i, txtValue;
      input = document.getElementById("search");
      filter = input.value.toUpperCase();
      table = document.getElementById("cablingproducts-dataTable");
      tr = table.getElementsByTagName("tr");
      for (i = 0; i < tr.length; i++) {
        td = tr[i].getElementsByTagName("td")[0];
        if (td) {
          txtValue = td.textContent || td.innerText;
          if (txtValue.toUpperCase().indexOf(filter) > -1) {
            tr[i].style.display = "";
          } else {
            tr[i].style.display = "none";
          }
        }
      }
    });

    $(document).on("click", "#uploadBtn", function () {
      //   console.log("clicked!");
      showspinner();
      UploadProcess();
    });

    //Sold or Delivered
    $(document).on("click", "#deliverBtn", function () {
      $("#deployserialmodal").val(itemserial);
      $("#soldModal").modal("show");
      console.log(itemserial);
    });

    $(document).on("click", "#submitBtn", function () {
      let serial = $("#deployserialmodal").val();
      let drnumber = $("#drnumbermodal").val();
      let date = $("#datedeploy").val();
      let client = $("#soldtomodal").val();
      let personel = $("#soldbymodal").val();

      var message = "";

      if (drnumber == "") {
        message += "DR NUMBER ";
      }

      if (date == "") {
        message += "DATE ";
      }

      if (client == "") {
        message += "SOLD TO ";
      }

      if (personel == "") {
        message += "SOLB BY ";
      }

      if (message != "") {
        warning("Required", `Please fill up ${message}`);
      } else {
        $.ajax({
          type: "POST",
          url: "/cablingproduct/sold",
          data: {
            serial: serial,
            drnumber: drnumber,
            date: date,
            client: client,
            personel: personel,
          },
          success: function (result) {
            if (result.msg == "success") {
              LoadTable();
              $("#soldModal").modal("hide");
              success("Done", "Submit Successfully");
            }
          },
          error: function (err) {
            errormsg(err);
          },
        });
      }
    });

    //Remove Data

    $(document).on("click", "#removeBtn", function () {
      $.ajax({
        type: "POST",
        url: "/cablingproduct/delete",
        data: {
          serial: itemserial,
        },
        success: function (result) {
          if (result.msg == "success") {
            LoadTable();
            success("Done", "Removed Successfully");
          }
        },
        error: function (err) {
          errormsg(err);
        },
      });
    });

     //Search Table Functionality
     $("#search").on("input", function () {
      filterTableRows("#datatable", 6, "#search");
    });

    function LoadTable() {
      $(".progress").hide();
      $(".progress").slideDown();

      $.ajax({
        url: '/cablingproduct/load',
        method: 'GET',
        dataType: 'json',
        xhrFields: {
          onprogress: function (e) {
            if (e.lengthComputable) {
              var percentComplete = (e.loaded / e.total) * 100;
              $(".progress-bar").css("width", percentComplete + "%");
            }
          }
        },
        success: function (data) {
          setTimeout(function () {
            $(".progress").slideUp(function () {
              if (data.msg === 'success') {
                populatedatatable(data.data);
              } else {
                console.error(data.msg);
              }
            });
          }, 1000);
        },
        error: function (error) {
          console.error(error);
        }
      });
    }

    function populatedatatable(data) {
      console.log(data);
      const tableBody = $('#datatable tbody');
      tableBody.empty();

      if (data.length === 0) {
        const tr = $('<tr>').append($('<td>', {
          colspan: 6,
          class: 'text-center',
          text: 'No Data Matched'
        }));
        tableBody.append(tr);
      } else {
        data.forEach(item => {
          let action = '';
          if (item.status === 'ACTIVE') {
            action = `
                  <span class="editbutton" id="editBtn" name="editBtn" data-toggle="modal" data-target="#editModal"><i class="fas fa-edit" style="color: rgb(99, 115, 129);"></i></span>
                  <span class="editbutton" id="inactiveBtn"><i class="fas fa-eye-slash" style="color: rgb(99, 115, 129);"></i></span>`;
          } else if (item.status === 'INACTIVE') {
            action = `
                <span class="editbutton" id="editBtn" name="editBtn" data-toggle="modal" data-target="#editModal"><i class="fas fa-edit" style="color: rgb(99, 115, 129);"></i></span>
                <span class="editbutton" id="activeBtn"><i class="fas fa-eye" style="color: rgb(99, 115, 129);"></i></span>`;
          }
          const statusBackground = item.status === 'ACTIVE' ? 'status-success' : 'status-warning';
          const containerBackground = item.status === 'ACTIVE' ? 'status-container-sc' : 'status-container-wr';
          // productserial: item.productserial,
          //description: item.description,
          //status: item.status,
          //addedby: item.addedby,
          //addeddate: item.addeddate,
          const tr = $('<tr>').append(
            $('<td>', { text: item.productserial, 'data-label': 'Serial', class: 'custom-mobile-align' }),
            $('<td>', { text: item.description, 'data-label': 'Name', class: 'custom-mobile-align' }),
            $('<td>', { text: item.addedby, 'data-label': 'Added By', class: 'custom-mobile-align' }),
            $('<td>', { text: item.addeddate, 'data-label': 'Added Date', class: 'custom-mobile-align' }),
            $('<td>', { class: 'custom-mobile-align', 'data-label': 'Status' }).append(
              $('<div>', { class: containerBackground }).append(
                $('<span>', { text: item.status, class: statusBackground })
              )
            ),
            $('<td>', { html: action, 'data-label': 'Action', class: 'actionWidth' })
          );

          tableBody.append(tr);
        });
      }
    }

    function LoadList() {
      $.ajax({
        type: "GET",
        url: "/cablingitems/load",
        success: function (result) {
          var data = result.data;

          $.each(data, function (key, item) {
            if (item.status == "ACTIVE") {
              activeDescription.push(item.description);
              var options = new Option(item.description, item.description);
              $(options).html(item.description);
              $("#descriptionlist").append(options);
            }
          });

          populateDescription(activeDescription);
        },
        error: function (err) {
          errormsg(err);
        },
      });

      $.ajax({
        type: "GET",
        url: "/cablingpersonel/load",
        success: function (result) {
          var data = result.data;

          $.each(data, function (key, item) {
            if (item.status == "ACTIVE") {
              activePersonel.push(item.personel);
            }
          });

          console.log(activePersonel);

          populatePersonel(activePersonel);
        },
        error: function (err) {
          errormsg(err);
        },
      });
    }

    function LoadModalList() {
      $.ajax({
        type: "GET",
        url: "/cablingpersonel/load",
        success: function (result) {
          var data = result.data;

          $.each(data, function (key, item) {
            if (item.status == "ACTIVE") {
              var options = new Option(item.personel, item.personel);
              $(options).html(item.personel);
              // $("#fruits").append(options);
              $("#personellist").append(options);
            }
          });
        },
        error: function (err) {
          errormsg(err);
        },
      });

      $.ajax({
        type: "GET",
        url: "/store/load",
        success: function (result) {
          var data = result.data;

          $.each(data, function (key, item) {
            if (item.status == "ACTIVE") {
              var options = new Option(item.storename, item.storename);
              $(options).html(item.storename);
              // $("#fruits").append(options);
              $("#storenamelist").append(options);
            }
          });
        },
        error: function (err) {
          errormsg(err);
        },
      });

      $.ajax({
        type: "GET",
        url: "/cablingrequesttype/load",
        success: function (result) {
          var data = result.data;

          $.each(data, function (key, item) {
            if (item.status == "ACTIVE") {
              var options = new Option(item.typename, item.typename);
              $(options).html(item.typename);
              // $("#fruits").append(options);
              $("#typenamelist").append(options);
            }
          });
        },
        error: function (err) {
          errormsg(err);
        },
      });
    }

    function UploadProcess() {
      //Reference the FileUpload element.
      var fileUpload = document.getElementById("excelfile");

      //Validate whether File is valid Excel file.
      var regex = /^([a-zA-Z0-9\s_\\.\-:])+(.xls|.xlsx|.csv|.ods)$/;
      if (regex.test(fileUpload.value.toLowerCase())) {
        if (typeof FileReader != "undefined") {
          var reader = new FileReader();

          //For Browsers other than IE.
          if (reader.readAsBinaryString) {
            reader.onload = function (e) {
              GetTableFromExcel(e.target.result);
            };
            reader.readAsBinaryString(fileUpload.files[0]);
          } else {
            //For IE Browser.
            reader.onload = function (e) {
              var data = "";
              var bytes = new Uint8Array(e.target.result);
              for (var i = 0; i < bytes.byteLength; i++) {
                data += String.fromCharCode(bytes[i]);
              }
              GetTableFromExcel(data);
            };
            reader.readAsArrayBuffer(fileUpload.files[0]);
          }
        } else {
          warning("Upload", "This browser does not support HTML5.");
        }
      } else {
        warning("Upload", "Please upload a valid Excel file.");
      }
    }

    function GetTableFromExcel(data) {
      //Read the Excel File data in binary
      var workbook = XLSX.read(data, {
        type: "binary",
      });

      //get the name of First Sheet.
      var Sheet = workbook.SheetNames[0];

      //Read all rows from First Sheet into an JSON array.
      var excelRows = XLSX.utils.sheet_to_row_object_array(
        workbook.Sheets[Sheet]
      );
      var columns = Object.keys(excelRows[0]);

      //Create a HTML Table element.
      var myTable = document.createElement("table");
      myTable.border = "1";

      //Add the header row.
      var row = myTable.insertRow(-1);

      var dataExcelArr = [];
      //Add the data rows from Excel file.
      for (var i = 0; i < excelRows.length; i++) {
        //Add the data row.
        var data = [];
        var row = myTable.insertRow(-1);
        for (var j = 0; j < columns.length; j++) {
          var cell = row.insertCell(-1);
          cell.innerHTML = excelRows[i][columns[j]];
          data.push({
            item: excelRows[i][columns[j]],
          });
        }
        dataExcelArr.push({
          serial: data[0].item,
          description: data[1].item,
        });
      }
      excelDataSave(dataExcelArr);
    }

    function excelDataSave(data) {
      var dataraw = JSON.stringify(data, null, 2);
      $.ajax({
        type: "POST",
        url: "/cablingproduct/excelsave",
        data: {
          data: dataraw,
        },
        success: function (result) {
          LoadTable();
          if (result.msg != "success") {
            warning(
              "Duplicate",
              `Some data already exist on the database. ID[${result.data}]`
            );
          } else {
            success("Saved!", "Data saved!");
          }

          // $('#item-tbl').DataTable().ajax.reload();
        },
        error: function (result) {
          error(result.data);
        },
      });
      hidespinner();
    }

    function populateDescription() {
      for (const description of activeDescription) {
        addDescription("descriptionDropdown", description);
      }
    }

    function populatePersonel() {
      for (const personel of activePersonel) {
        addPersonel("personelDropdown", personel);
      }
    }

    function addDescription(dropdownId, optionText) {
      const dropdownElement = document.getElementById(dropdownId);
      const newOption = document.createElement("div");
      newOption.className = "dropdown-option";
      newOption.textContent = optionText;

      newOption.addEventListener("click", function () {
        const inputElement = document.getElementById("description");
        inputElement.value = optionText;
        dropdownElement.style.display = "none";
      });

      dropdownElement.appendChild(newOption);
    }

    function addPersonel(dropdownId, optionText) {
      const dropdownElement = document.getElementById(dropdownId);
      const newOption = document.createElement("div");
      newOption.className = "dropdown-option";
      newOption.textContent = optionText;

      newOption.addEventListener("click", function () {
        const inputElement = document.getElementById("soldbymodal");
        inputElement.value = optionText;
        dropdownElement.style.display = "none";
      });

      dropdownElement.appendChild(newOption);
    }

    setupCustomDropdown(
      "description",
      "descriptionDropdown",
      "dropdown-option"
    );

    setupCustomDropdown("soldbymodal", "personelDropdown", "dropdown-option");
  });
</script>
