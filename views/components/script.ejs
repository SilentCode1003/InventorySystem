<!-- LOADER -->
<!-- <div class="loader-wrapper">
  <div class="spinner"></div>
</div> -->
<!-- LOADER -->
<!-- <div class="loader-wrapper">
  <span class="loader"><span class="loader-inner"></span></span>
</div> -->

<!-- Logout Modal-->
<div
  class="modal fade"
  id="logoutModal"
  tabindex="-1"
  role="dialog"
  aria-labelledby="exampleModalLabel"
  aria-hidden="true"
>
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Ready to Leave?</h5>
        <button
          class="close"
          type="button"
          data-dismiss="modal"
          aria-label="Close"
        >
          <span aria-hidden="true">×</span>
        </button>
      </div>
      <div class="modal-body">
        Select "Logout" below if you are ready to end your current session.
      </div>
      <div class="modal-footer">
        <button class="btn btn-secondary" type="button" data-dismiss="modal">
          Cancel
        </button>
        <button name="logoutBtn" id="logoutBtn" class="btn btn-primary">
          Logout
        </button>
      </div>
    </div>
  </div>
</div>
<!-- Scroll Effects -->
<script src="https://unpkg.com/scrollreveal"></script>

<!-- Bootstrap core JavaScript-->
<script src="/vendor/jquery/jquery.min.js"></script>
<script src="/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>

<!-- Core plugin JavaScript-->
<script src="/vendor/jquery-easing/jquery.easing.min.js"></script>

<!-- Custom scripts for all pCreated bys-->
<script src="/javascripts/js/sb-admin-2.min.js"></script>

<!-- PCreated by level plugins -->
<script src="/vendor/datatables/jquery.dataTables.min.js"></script>
<script src="/vendor/datatables/dataTables.bootstrap4.min.js"></script>

<!-- PCreated by level custom scripts -->
<script src="/javascripts/js/demo/datatables-demo.js"></script>

<!-- SWAL-->
<script src="/javascripts/sweetalert.min.js"></script>

<!-- TOASTR -->
<script src="/javascripts/toastr.min.js"></script>

<!-- XLSX -->
<script src="/javascripts/xlsx.mini.min.js"></script>

<!-- Latest compiled and minified JavaScript -->
<script src="/javascripts/bootstrap-select.min.js"></script>

<!-- DATETIMEPICKER -->
<link
  rel="stylesheet"
  type="text/css"
  href="/stylesheets/css/DateTimePicker.min.css"
/>
<script
  type="text/javascript"
  src="/javascripts/DateTimePicker.min.js"
></script>

<!--CHART-->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script
  src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/js/solid.min.js"
  integrity="sha512-+fI924YJzeYFv7M0R29zJvRThPinSUOAmo5rpR9v6G4eWIbva/prHdZGSPN440vuf781/sOd/Fr+5ey0pqdW9w=="
  crossorigin="anonymous"
  referrerpolicy="no-referrer"
></script>
<script
  src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/js/regular.min.js"
  integrity="sha512-T4H/jsKWzCRypzaFpVpYyWyBUhjKfp5e/hSD234qFO/h45wKAXba+0wG/iFRq1RhybT7dXxjPYYBYCLAwPfE0Q=="
  crossorigin="anonymous"
  referrerpolicy="no-referrer"
></script>
<script
  src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/js/v4-shims.min.js"
  integrity="sha512-lcumC2XgVQA+cNJaYBRtZcTJ88EZ/Na2rG2yKtasO44flXlQWjvaqBqJch22AG9t/4pfD1EVD49oW8PBxtWBWg=="
  crossorigin="anonymous"
  referrerpolicy="no-referrer"
></script>
<script
  src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/js/fontawesome.min.js"
  integrity="sha512-C8qHv0HOaf4yoA7ISuuCTrsPX8qjolYTZyoFRKNA9dFKnxgzIHnYTOJhXQIt6zwpIFzCrRzUBuVgtC4e5K1nhA=="
  crossorigin="anonymous"
  referrerpolicy="no-referrer"
></script>

<script>
  // ScrollReveal().reveal('tr', {
  //   delay: 200,
  //   distance: '50px',
  //   origin: 'bottom',
  //   easing: 'ease-in-out',
  //   interval: 100 // Change the interval to delay each row animation
  // });

  // hidespinner();

  $(document).on("click", "#logoutBtn", function () {
    $.ajax({
      type: "POST",
      url: "/login/logout",
      success: function (result) {
        success("Logout", "Successfully");
        location.replace("/");
      },
      error: function (err) {
        errormsg(err);
      },
    });
  });

  const numberInputs = document.querySelectorAll(".number-validator");

  numberInputs.forEach(function (input) {
    input.addEventListener("input", function () {
      const inputValue = this.value;

      if (inputValue.length === 1 && inputValue === "0") {
        this.value = "";
      } else if (!/^\d*$/.test(inputValue)) {
        this.value = inputValue.replace(/\D/g, "");
      }
    });
  });

  function ClearTable(name) {
    $(`#${name}`).find("tr:gt(0)").remove();
  }

  function ConvertToCurrency(val) {
    return `₱ ${parseFloat(val)
      .toFixed(2)
      .replace(/\d(?=(\d{3})+\.)/g, "$&,")}`;
  }

  function RemoveCurrencyFormatting(val) {
    return val.replace(/[^\d.-]/g, "");
  }

  function formatCurrency(value) {
    if (!value) {
      return "₱0.00";
    }
    var formattedValue = parseFloat(value).toFixed(2);
    return "₱" + formattedValue.replace(/\d(?=(\d{3})+\.)/g, "$&,");
  }

  $(document).ready(function () {
    if ($(".collapse-item.active").length > 0) {
      $(".collapse-item.active").closest(".collapse").addClass("show");
    }

    $(".collapse-item").click(function () {
      $(".collapse-item").removeClass("active");
      $(this).addClass("active");
    });

    var path = window.location.pathname;

    $(".collapse-item").each(function () {
      var href = $(this).attr("href");
      if (path === href) {
        $(this).addClass("active");
        $(this).closest(".collapse").addClass("show");
      }
    });

    function adjustCollapse() {
      if ($(window).width() <= 767) {
        $(".collapse").removeClass("show");
        $(".row.d-flex.justify-content-center.align-items-center").removeClass(
          "login-height"
        );
      } else {
        $(".collapse-item.active").closest(".collapse").addClass("show");
      }
    }
    adjustCollapse();

    $(window).resize(function () {
      adjustCollapse();
    });

    $(document).on("click", function (event) {
      if ($(window).width() <= 767) {
        if (!$(event.target).closest(".collapse").length) {
          $(".collapse").removeClass("show");
        }
      }
    });
  });

  $(".customdropdown").click(function () {
    $(this).attr("tabindex", 1).focus();
    $(this).toggleClass("active");
    $(this).find(".customdropdown-menu").slideToggle(300);
  });
  $(".customdropdown").focusout(function () {
    $(this).removeClass("active");
    $(this).find(".customdropdown-menu").slideUp(300);
  });
  $(".customdropdown .customdropdown-menu li").click(function () {
    $(this).parents(".customdropdown").find("span").text($(this).text());
    $(this)
      .parents(".customdropdown")
      .find("input")
      .attr("value", $(this).attr("id"));
  });

  $(document).ready(function () {
    let isSidebarOpen = localStorage.getItem("isSidebarOpen") === "true";

    function updateSidebarState() {
      $("body").toggleClass("sidebar-toggled", isSidebarOpen);
      $(".sidebar").toggleClass("toggled", isSidebarOpen);

      if (isSidebarOpen) {
        $(".sidebar .collapse").collapse("hide");
      }
    }

    updateSidebarState();

    $("#sidebarToggle, #sidebarToggleTop").on("click", function (e) {
      isSidebarOpen = !isSidebarOpen;

      localStorage.setItem("isSidebarOpen", isSidebarOpen);

      updateSidebarState();
    });
  });

  const toggleButton = document.getElementById("toggleButton");
  const toggleView = document.querySelector(".toggle-view");
  let isOpen = false;
  if (toggleButton != null && toggleView != null) {
    toggleButton.addEventListener("click", function () {
      if (!isOpen) {
        toggleView.style.display = "block";
        toggleView.style.height = toggleView.scrollHeight + "px";
        toggleButton.innerHTML = '<i class="fas fa-chevron-up"></i>';
      } else {
        toggleView.style.height = "0";
        setTimeout(() => {
          toggleView.style.display = "none";
        }, 500);
        toggleButton.innerHTML = '<i class="fas fa-chevron-right"></i>';
      }

      isOpen = !isOpen;
    });
  }

  function setupCustomDropdown(inputId, dropdownId, optionClass) {
    const inputElement = document.getElementById(inputId);
    const dropdownElement = document.getElementById(dropdownId);
    const options = dropdownElement.getElementsByClassName(optionClass);

    inputElement.addEventListener("click", function () {
      dropdownElement.style.display = "block";
    });

    for (const option of options) {
      option.addEventListener("click", function () {
        inputElement.value = option.textContent;
        dropdownElement.style.display = "none";
      });
    }

    inputElement.addEventListener("input", function () {
      const value = inputElement.value.toUpperCase();
      for (const option of options) {
        if (option.textContent.toUpperCase().includes(value)) {
          option.style.display = "block";
        } else {
          option.style.display = "none";
        }
      }
      dropdownElement.style.display = "block";
    });

    document.addEventListener("click", function (event) {
      const target = event.target;
      if (!dropdownElement.contains(target) && target !== inputElement) {
        dropdownElement.style.display = "none";
      }
    });
  }

  function populateDropdown(data, dropdownname, inputname) {
    for (const item of data) {
      generateDropdown(dropdownname, item, inputname);
    }
  }

  function generateDropdown(dropdownId, optionText, inputname) {
    const dropdownElement = document.getElementById(dropdownId);
    const newOption = document.createElement("div");
    newOption.className = "dropdown-option";
    newOption.textContent = optionText;

    newOption.addEventListener("click", function () {
      const inputElement = document.getElementById(inputname);
      inputElement.value = optionText;
      dropdownElement.style.display = "none";
    });

    dropdownElement.appendChild(newOption);
  }

  $(document).ready(function () {
    let isSidebarOpen = localStorage.getItem("isSidebarOpen") === "true";

    function updateSidebarState() {
      $("body").toggleClass("sidebar-toggled", isSidebarOpen);
      $(".sidebar").toggleClass("toggled", isSidebarOpen);

      if (isSidebarOpen) {
        $(".sidebar .collapse").collapse("hide");
        $("#content").toggleClass("content-toggled");
        $(".navbar").toggleClass("navbar-toggled");
        $(".sticky-footer").toggleClass("footer-toggled");
      } else {
        $("#content").removeClass("content-toggled");
        $(".navbar").removeClass("navbar-toggled");
        $(".sticky-footer").removeClass("footer-toggled");
      }
    }

    updateSidebarState();

    $("#sidebarToggle, #sidebarToggleTop").on("click", function (e) {
      isSidebarOpen = !isSidebarOpen;

      localStorage.setItem("isSidebarOpen", isSidebarOpen);

      updateSidebarState();
    });
  });

  document.addEventListener("DOMContentLoaded", function () {
    setTimeout(function () {
      // Specify the IDs of the collapsible sections
      var collapseSectionIds = [
        "#collapseAdminControlPanel",
        "#collapseUtilities2",
        "#collapseCablingMaster",
        "#collapseCablingInventory",
        "#collapseCablingRequest",
        "#collapseCablingReports",
      ];

      collapseSectionIds.forEach(function (sectionId) {
        var collapseItems = document.querySelectorAll(
          sectionId + " .collapse-item"
        );

        collapseItems.forEach(function (item) {
          var iconElement = item.querySelector("i");

          if (iconElement) {
            if (item.classList.contains("active")) {
              iconElement.classList.remove("far");
              iconElement.classList.add("fas");
            } else {
              iconElement.classList.remove("fas");
              iconElement.classList.add("far");
            }
          }
        });
      });
    }, 100);
  });

  function successlogin(title, text) {
    return swal({
      title: title,
      text: text,
      icon: "success",
      buttons: {
        confirm: {
          text: "OK",
          value: true,
          visible: true,
          className: "swal-button-ok",
        },
      },
    }).then((result) => {
      return new Promise((resolve, reject) => {
        if (result === true) {
          resolve();
        } else {
          reject();
        }
      });
    });
  }

  function Loading(title) {
    toastr.info(
      `<strong>${title}</strong> <br>
        <div style="text-align: center; margin-top: 5px;">
          <div class="spinner-border" role="status" style="display: inline-block;">
            <span class="sr-only">Loading...</span>
          </div>
        </div>`,
      null, // No title for the notification itself
      {
        closeButton: false,
        debug: false,
        newestOnTop: true,
        progressBar: false,
        positionClass: "toast-top-right",
        preventDuplicates: true,
        onclick: null,
        showDuration: "300",
        hideDuration: "0", // Set to 0 to make it indefinite until manually cleared
        timeOut: "0", // Set to 0 to make it indefinite until manually cleared
        extendedTimeOut: "0", // Set to 0 to make it indefinite until manually cleared
        showEasing: "swing",
        hideEasing: "linear",
        showMethod: "fadeIn",
        hideMethod: "hide",
      }
    );
  }

  function success(title, text) {
    toastr.success(text, title, {
      closeButton: false,
      debug: false,
      newestOnTop: true,
      progressBar: true,
      positionClass: "toast-top-right",
      preventDuplicates: true,
      onclick: null,
      showDuration: "300",
      hideDuration: "1000",
      timeOut: "5000",
      extendedTimeOut: "1000",
      showEasing: "swing",
      hideEasing: "linear",
      showMethod: "fadeIn",
      hideMethod: "fadeOut",
    });
  }

  function warning(title, text) {
    toastr.warning(text, title, {
      closeButton: false,
      debug: false,
      newestOnTop: true,
      progressBar: true,
      positionClass: "toast-top-right",
      preventDuplicates: true,
      onclick: null,
      showDuration: "300",
      hideDuration: "1000",
      timeOut: "5000",
      extendedTimeOut: "1000",
      showEasing: "swing",
      hideEasing: "linear",
      showMethod: "fadeIn",
      hideMethod: "hide",
    });
  }

  function warningRegister(title, text) {
    toastr.warning(text, title, {
      closeButton: false,
      debug: false,
      newestOnTop: true,
      progressBar: true,
      positionClass: "toast-top-right",
      preventDuplicates: false,
      onclick: null,
      showDuration: "300",
      hideDuration: "1000",
      timeOut: "0",
      extendedTimeOut: "0",
      showEasing: "swing",
      hideEasing: "linear",
      showMethod: "fadeIn",
      hideMethod: "hide",
    });
  }

  function warningInfo(title, text) {
    toastr.info(text, title, {
      closeButton: false,
      debug: false,
      newestOnTop: true,
      progressBar: true,
      positionClass: "toast-top-right",
      preventDuplicates: false,
      onclick: null,
      showDuration: "300",
      hideDuration: "1000",
      timeOut: "0",
      extendedTimeOut: "0",
      showEasing: "swing",
      hideEasing: "linear",
      showMethod: "fadeIn",
      hideMethod: "hide",
    });
  }

  function hideLoading() {
    toastr.clear();
    console.log("Toastr Cleared!");
  }

  //GLOBAL SEARCH FUNCTION

  function filterTableRows(tablename, colcount, searchid) {
    console.log("triggered search");

    const searchQuery = $(searchid).val().trim().toLowerCase();
    let foundMatches = false;

    $("#no-match-row").remove();

    $(tablename + " tbody tr").each(function () {
      const rowData = $(this).text().toLowerCase();
      if (rowData.includes(searchQuery)) {
        $(this).show();
        foundMatches = true;
      } else {
        $(this).hide();
      }
    });

    if (!foundMatches) {
      const noMatchRow = $("<tr>").append(
        $("<td>", {
          colspan: colcount,
          class: "text-center",
          text: "No Data Matched",
        })
      );
      $(tablename + " tbody").append(noMatchRow);
      noMatchRow.attr("id", "no-match-row");
    }
  }
</script>
